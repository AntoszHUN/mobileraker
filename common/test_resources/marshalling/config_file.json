{
  "save_config_pending_items": {},
  "warnings": [],
  "config": {
    "gcode_macro BED_MESH_CALIBRATE": {
      "rename_existing": "_BED_MESH_CALIBRATE",
      "variable_last_area_end_x": "-1",
      "variable_last_area_end_y": "-1",
      "gcode": "\n{% if params.FORCE_NEW_MESH != null %}\n{ action_respond_info(\"Force New Mesh: %s\" % (params.FORCE_NEW_MESH)) }\n{% endif %}\n{% if printer[\"bed_mesh\"].profile_name == '' %}\n{ action_respond_info(\"No existing bed mesh found.\") }\n{% set last_area_end_x=-1 %}\n{% endif %}\n{% if printer.toolhead.homed_axes != \"xyz\" %}\nG28\n{% endif %}\n{% set klicky_available = printer['gcode_macro _Probe_Variables'] != null %}\n{% set euclid_available = printer['gcode_macro EuclidProbe'] != null %}; Requires v5 macros https://github.com/nionio6915/Euclid_Probe/blob/main/Firmware_Examples/Klipper/00-euclid_exampleV5.cfg\n{% if params.PRINT_MIN %}\n{ action_respond_info(\"print_min: %s\" % params.PRINT_MIN) }\n{ action_respond_info(\"print_max: %s\" % params.PRINT_MAX) }\n{% set blTouchConfig = printer['configfile'].config[\"bltouch\"] %}\n{% if blTouchConfig %}\n{% set OffsetX = blTouchConfig.x_offset|default(0)|float %}\n{% set OffsetY = blTouchConfig.y_offset|default(0)|float %}\n{% endif %}\n{% set probeConfig = printer['configfile'].config[\"probe\"] %}\n{% if probeConfig %}\n{% set OffsetX = probeConfig.x_offset|default(0)|float %}\n{% set OffsetY = probeConfig.y_offset|default(0)|float %}\n{% endif %}\n{% set print_min_x = params.PRINT_MIN.split(\",\")[0]|float %}\n{% set print_min_y = params.PRINT_MIN.split(\",\")[1]|float %}\n{% set print_max_x = params.PRINT_MAX.split(\",\")[0]|float %}\n{% set print_max_y = params.PRINT_MAX.split(\",\")[1]|float %}\n{% if last_area_start_x > 0 %}\n{ action_respond_info(\"last_bed_mesh: %s,%s %s,%s\" % (last_area_start_x, last_area_start_y, last_area_end_x, last_area_end_y)) }\n{% endif %}\n{% if (params.FORCE_NEW_MESH != null) or (print_min_x < last_area_start_x) or (print_max_x > last_area_end_x) or (print_min_y < last_area_start_y) or (print_max_y > last_area_end_y)  %}\n{% if klicky_available %}\n_CheckProbe action=query\nAttach_Probe\n{% elif euclid_available %}\nDEPLOY_PROBE\n{% endif %}\n{% if (print_min_x < print_max_x) and (print_min_y < print_max_y) %}\n{% set bedMeshConfig = printer['configfile'].config[\"bed_mesh\"] %}\n{% set minimum_probe_count = 3 %}\n{% if bedMeshConfig.algorithm == \"bicubic\" %}\n{% set minimum_probe_count = 5 %}\n{% endif %}\n{% set probe_count = bedMeshConfig.probe_count.split(\",\") %}\n{% set probe_count_x = probe_count[0]|int %}\n{% if probe_count.__len__() > 1 %}\n{% set probe_count_y = probe_count[1]|int %}\n{% else %}\n{% set probe_count_y = probe_count_x|int %}\n{% endif %}\n{% set relative_reference_index = bedMeshConfig.relative_reference_index %}\n{% set mesh_min_x = bedMeshConfig.mesh_min.split(\",\")[0]|float %}\n{% set mesh_min_y = bedMeshConfig.mesh_min.split(\",\")[1]|float %}\n{% set mesh_max_x = bedMeshConfig.mesh_max.split(\",\")[0]|float %}\n{% set mesh_max_y = bedMeshConfig.mesh_max.split(\",\")[1]|float %}\n{% if print_max_x - print_min_x < (mesh_max_x - mesh_min_x) * 0.50 %}\n{% set probe_count_x = minimum_probe_count %}\n{% endif %}\n{% if print_max_y - print_min_y < (mesh_max_y - mesh_min_y) * 0.50 %}\n{% set probe_count_y = minimum_probe_count %}\n{% endif %}\n{% if print_min_x - buffer >= mesh_min_x %}\n{% set mesh_min_x = print_min_x - buffer %}\n{% endif %}\n{% if print_min_y - buffer >= mesh_min_y %}\n{% set mesh_min_y = print_min_y - buffer %}\n{% endif %}\n{% if print_max_x + buffer <= mesh_max_x %}\n{% set mesh_max_x = print_max_x + buffer %}\n{% endif %}\n{% if print_max_y + buffer <= mesh_max_y %}\n{% set mesh_max_y = print_max_y + buffer %}\n{% endif %}\n{ action_respond_info(\"mesh_min: %s,%s\" % (mesh_min_x, mesh_min_y)) }\n{ action_respond_info(\"mesh_max: %s,%s\" % (mesh_max_x, mesh_max_y)) }\n{ action_respond_info(\"probe_count: %s,%s\" % (probe_count_x,probe_count_y)) }\n; Set variables so they're available outside of macro\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=last_area_start_x VALUE={print_min_x}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=last_area_start_y VALUE={print_min_y}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=last_area_end_x VALUE={print_max_x}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=last_area_end_y VALUE={print_max_y}\n{% if printer[\"gcode_macro status_meshing\"] != null %}\nstatus_meshing\n{% endif %}\n{% if relative_reference_index == 0 or relative_reference_index == null %}\n_BED_MESH_CALIBRATE mesh_min={mesh_min_x},{mesh_min_y} mesh_max={mesh_max_x},{mesh_max_y} probe_count={probe_count_x},{probe_count_y}\n{% else %}\n{% set relative_reference_index = ((probe_count_x * probe_count_y - 1) / 2)|int %}\n{ action_respond_info(\"relative_reference_index: %s\" % relative_reference_index) }\n_BED_MESH_CALIBRATE mesh_min={mesh_min_x},{mesh_min_y} mesh_max={mesh_max_x},{mesh_max_y} probe_count={probe_count_x},{probe_count_y} relative_reference_index={relative_reference_index}\n{% endif %}\n{% else %}\n{% if printer[\"gcode_macro status_meshing\"] != null %}\nstatus_meshing\n{% endif %}\n_BED_MESH_CALIBRATE\n{% endif %}\n{% if klicky_available %}\nDock_Probe\n{% elif euclid_available %}\nSTOW_PROBE\n{% endif %}\n{% else %}\n{ action_respond_info(\"No need to recreate Bed Mesh since it's same as current mesh or smaller\") }\n{% endif %}\n{% else %}\n{% if klicky_available %}\n_CheckProbe action=query\nAttach_Probe\n{% elif euclid_available %}\nSTOW_PROBE\n{% endif %}\n{% if printer[\"gcode_macro status_meshing\"] != null %}\nstatus_meshing\n{% endif %}\n_BED_MESH_CALIBRATE\n{% if klicky_available %}\nDock_Probe\n{% endif %}\n{% if euclid_available %}\nSTOW_PROBE\n{% endif %}\n{% endif %}\n{% if printer[\"gcode_macro status_ready\"] != null %}\nstatus_ready\n{% endif %}",
      "variable_last_area_start_y": "-1",
      "variable_last_area_start_x": "-1",
      "variable_buffer": "20"
    },
    "force_move": {
      "enable_force_move": "true"
    },
    "gcode_macro ECKEN_LEVELN_MANUELL": {
      "gcode": "\nG28\nBED_SCREWS_ADJUST"
    },
    "pause_resume": {},
    "safe_z_home": {
      "z_hop_speed": "4",
      "speed": "400",
      "home_xy_position": "700,100",
      "z_hop": "10"
    },
    "stepper_y1": {
      "rotation_distance": "31.74",
      "step_pin": "PA4",
      "microsteps": "16",
      "dir_pin": "PA6",
      "enable_pin": "!PA2"
    },
    "gcode_macro UNLOAD_FILAMENT": {
      "gcode": "\nG28\nG1 Z150 F6000\nM83\nG1 E10 F300\nG1 E-130 F1800\nM82"
    },
    "gcode_macro END_PRINT": {
      "gcode": "\nM104 S0\nM140 S0\nG90\nG92 E1\nG1 E-0.5 F300\nG1 X5 Y5 F1000\nM84\nM106 S0"
    },
    "gcode_macro LOAD_FILAMENT": {
      "gcode": "\nG28\nG1 Z150 F6000\nM83\nG1 E60 F300\nG1 E70 F1800\nG1 E25 F150\nM82"
    },
    "bed_mesh default": {
      "tension": "0.08",
      "min_x": "642.97",
      "min_y": "115.49",
      "y_count": "5",
      "mesh_y_pps": "4",
      "x_count": "5",
      "version": "1",
      "algo": "bicubic",
      "mesh_x_pps": "4",
      "max_y": "249.97",
      "max_x": "799.98",
      "points": "\n-0.012939, -0.022937, -0.074104, -0.039404, -0.038816\n-0.064694, -0.048226, -0.045874, -0.048226, -0.057048\n-0.067634, -0.104098, -0.019408, 0.091748, -0.064694\n-0.130564, -0.112920, -0.072927, -0.059401, -0.064694\n-0.224664, -0.065282, -0.090571, -0.099393, -0.101157"
    },
    "virtual_sdcard": {
      "path": "~/gcode_files"
    },
    "stepper_z": {
      "endstop_pin": "probe:z_virtual_endstop",
      "rotation_distance": "1.005120",
      "second_homing_speed": "3",
      "step_pin": "zboard:PF6",
      "position_min": "-10",
      "microsteps": "8",
      "homing_speed": "5",
      "dir_pin": "!zboard:PF7",
      "position_max": "1500",
      "enable_pin": "!zboard:PF2"
    },
    "stepper_y": {
      "homing_positive_dir": "false",
      "position_endstop": "-26",
      "endstop_pin": "^!PJ0",
      "rotation_distance": "31.74",
      "step_pin": "PF6",
      "position_min": "-26",
      "microsteps": "16",
      "homing_speed": "70",
      "dir_pin": "!PF7",
      "position_max": "1100",
      "enable_pin": "!PF2"
    },
    "stepper_x": {
      "position_endstop": "950",
      "endstop_pin": "!PD3",
      "rotation_distance": "40",
      "step_pin": "PF0",
      "position_min": "0",
      "microsteps": "16",
      "homing_speed": "70",
      "dir_pin": "PF1",
      "position_max": "950",
      "enable_pin": "!PD7"
    },
    "gcode_macro Z_OFFSET": {
      "gcode": "\nG28\nG1 F4000 z10 X111 Y195\nPROBE_CALIBRATE"
    },
    "gcode_macro START_PRINT": {
      "gcode": "\nG28\nBED_MESH_CALIBRATE PRINT_MIN={params.PRINT_MIN} PRINT_MAX={params.PRINT_MAX}\n{% set EXTRUDER = params.EXTRUDER_TEMP|default(220)|int %}\nM109 S{EXTRUDER}\nG90\nM83\nM220 S100\nM221 S100\nG1 Z5 F600\nG92 E0\nG1 X900 Y20 F6000\nG1 X900 Y50 F5000\nG1 Z0.5 F600\nG1 Y95 F300 E12\nG1 F300 E10\nG1 Z0.2 F600\nG1 Y200 E30 F600\nG1 Y230 Z5 F600"
    },
    "gcode_macro ECKEN_LEVELN_PROBE": {
      "gcode": "\nG28\nSCREWS_TILT_CALCULATE"
    },
    "printer": {
      "square_corner_velocity": "5",
      "max_accel": "2000",
      "max_z_accel": "20",
      "max_velocity": "300",
      "max_z_velocity": "11",
      "kinematics": "cartesian"
    },
    "gcode_macro RESUME": {
      "rename_existing": "BASE_RESUME",
      "gcode": "\n{% set E = printer[\"gcode_macro PAUSE\"].extrude|float %}\nG91\nG1 E{E} F2100\nM220 S5\nRESTORE_GCODE_STATE NAME=PAUSE_state\nBASE_RESUME"
    },
    "gcode_macro PAUSE": {
      "rename_existing": "BASE_PAUSE",
      "variable_extrude": "1.0",
      "gcode": "\n{% set E = printer[\"gcode_macro PAUSE\"].extrude|float %}\n{% set X = params.X|default(0)|float %}\n{% set Y = params.Y|default(0)|float %}\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - 200.0) %}\n{% set z_safe = 200.0 %}\n{% else %}\n{% set z_safe = max_z - act_z - 10 %}\n{% endif %}\nSAVE_GCODE_STATE NAME=PAUSE_state\nBASE_PAUSE\nG91\nG1 E-{E} F2100\nG1 Z{z_safe} F750\nG90\nG1 X{X} Y{Y} F6000"
    },
    "idle_timeout": {
      "gcode": "PRINT_TIMEOUT timeout: 3000"
    },
    "fan": {
      "kick_start_time": "0.800",
      "pin": "PH4"
    },
    "heater_fan my_nozzle_fan": {
      "heater": "extruder",
      "fan_speed": "1.0",
      "pin": "PB4",
      "heater_temp": "50.0"
    },
    "stepper_z2": {
      "rotation_distance": "1.005120",
      "step_pin": "zboard:PA4",
      "microsteps": "8",
      "dir_pin": "!zboard:PA6",
      "enable_pin": "!zboard:PA2"
    },
    "stepper_z3": {
      "rotation_distance": "1.005120",
      "step_pin": "zboard:PC1",
      "microsteps": "8",
      "dir_pin": "!zboard:PC3",
      "enable_pin": "!zboard:PC7"
    },
    "mcu": {
      "serial": "/dev/serial/by-path/platform-3f980000.usb-usb-0:1.5:1.0-port0"
    },
    "stepper_z1": {
      "rotation_distance": "1.005120",
      "step_pin": "zboard:PL3",
      "microsteps": "8",
      "dir_pin": "!zboard:PL1",
      "enable_pin": "!zboard:PK0"
    },
    "quad_gantry_level": {
      "retries": "18",
      "horizontal_move_z": "10",
      "retry_tolerance": "0.03",
      "gantry_corners": "\n-165,-200\n1110,1100",
      "points": "\n100,100\n100,900\n890,900\n890,100",
      "speed": "300",
      "max_adjust": "70"
    },
    "bed_mesh": {
      "horizontal_move_z": "6",
      "mesh_min": "130,60",
      "algorithm": "bicubic",
      "mesh_max": "800,900",
      "fade_start": "10",
      "bicubic_tension": "0.08",
      "fade_end": "2.0",
      "split_delta_z": ".025",
      "probe_count": "6,10",
      "speed": "250",
      "mesh_pps": "4,4"
    },
    "display_status": {},
    "gcode_macro BED_TRIMMING": {
      "gcode": "\nG28\nquad_gantry_level"
    },
    "gcode_macro CANCEL_PRINT": {
      "rename_existing": "BASE_CANCEL_PRINT",
      "gcode": "\nG1 X0 Y0 F20000\nTURN_OFF_HEATERS\nCLEAR_PAUSE\nSDCARD_RESET_FILE\nBASE_CANCEL_PRINT"
    },
    "gcode_macro BLTOUCH_CALIBRATE": {
      "gcode": "\nG28\nG1 F4000 z10 X111 Y195\nPROBE_ACCURACY"
    },
    "mcu zboard": {
      "serial": "/dev/serial/by-path/platform-3f980000.usb-usb-0:1.3:1.0-port0"
    },
    "bltouch": {
      "sensor_pin": "^zboard:PD3",
      "x_offset": "-41",
      "control_pin": "zboard:PB5",
      "samples_result": "average",
      "y_offset": "42",
      "samples": "1",
      "z_offset": "4.253",
      "probe_with_touch_mode": "true",
      "stow_on_each_sample": "true",
      "speed": "3"
    },
    "gcode_macro G29": {
      "gcode": "\nG28\nBED_MESH_CLEAR\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=default"
    },
    "extruder": {
      "control": "pid",
      "max_extrude_cross_section": "800.0",
      "gear_ratio": "3:1",
      "max_extrude_only_distance": "500",
      "sensor_type": "PT1000",
      "min_temp": "5",
      "enable_pin": "!zboard:PD7",
      "pressure_advance": "0.0375",
      "dir_pin": "!zboard:PF1",
      "pid_kp": "56.334",
      "heater_pin": "PH5",
      "smooth_time": "7.00",
      "pid_kd": "61.264",
      "pid_ki": "12.950",
      "filament_diameter": "1.750",
      "sensor_pin": "zboard:PK6",
      "nozzle_diameter": "1.00",
      "rotation_distance": "22.6694",
      "step_pin": "zboard:PF0",
      "microsteps": "16",
      "min_extrude_temp": "180",
      "max_temp": "330"
    }
  },
  "settings": {
    "force_move": {
      "enable_force_move": true
    },
    "pause_resume": {
      "recover_velocity": 50.0
    },
    "safe_z_home": {
      "z_hop_speed": 4.0,
      "move_to_previous": false,
      "speed": 400.0,
      "home_xy_position": [
        700.0,
        100.0
      ],
      "z_hop": 10.0
    },
    "gcode_macro z_offset": {
      "gcode": "\nG28\nG1 F4000 z10 X111 Y195\nPROBE_CALIBRATE",
      "description": "G-Code macro"
    },
    "gcode_macro bed_trimming": {
      "gcode": "\nG28\nquad_gantry_level",
      "description": "G-Code macro"
    },
    "gcode_macro cancel_print": {
      "rename_existing": "BASE_CANCEL_PRINT",
      "description": "G-Code macro",
      "gcode": "\nG1 X0 Y0 F20000\nTURN_OFF_HEATERS\nCLEAR_PAUSE\nSDCARD_RESET_FILE\nBASE_CANCEL_PRINT"
    },
    "stepper_y1": {
      "full_steps_per_rotation": 200,
      "rotation_distance": 31.74,
      "gear_ratio": [],
      "step_pin": "PA4",
      "microsteps": 16,
      "dir_pin": "PA6",
      "enable_pin": "!PA2"
    },
    "gcode_macro end_print": {
      "gcode": "\nM104 S0\nM140 S0\nG90\nG92 E1\nG1 E-0.5 F300\nG1 X5 Y5 F1000\nM84\nM106 S0",
      "description": "G-Code macro"
    },
    "bed_mesh default": {
      "tension": 0.08,
      "min_x": 642.97,
      "min_y": 115.49,
      "y_count": 5,
      "mesh_y_pps": 4,
      "x_count": 5,
      "version": 1,
      "algo": "bicubic",
      "mesh_x_pps": 4,
      "max_y": 249.97,
      "max_x": 799.98,
      "points": [
        [
          -0.012939,
          -0.022937,
          -0.074104,
          -0.039404,
          -0.038816
        ],
        [
          -0.064694,
          -0.048226,
          -0.045874,
          -0.048226,
          -0.057048
        ],
        [
          -0.067634,
          -0.104098,
          -0.019408,
          0.091748,
          -0.064694
        ],
        [
          -0.130564,
          -0.11292,
          -0.072927,
          -0.059401,
          -0.064694
        ],
        [
          -0.224664,
          -0.065282,
          -0.090571,
          -0.099393,
          -0.101157
        ]
      ]
    },
    "virtual_sdcard": {
      "path": "~/gcode_files",
      "on_error_gcode": ""
    },
    "verify_heater extruder": {
      "heating_gain": 2.0,
      "max_error": 120.0,
      "hysteresis": 5.0,
      "check_gain_time": 20.0
    },
    "stepper_z": {
      "homing_positive_dir": false,
      "homing_retract_dist": 5.0,
      "full_steps_per_rotation": 200,
      "endstop_pin": "probe:z_virtual_endstop",
      "rotation_distance": 1.00512,
      "gear_ratio": [],
      "second_homing_speed": 3.0,
      "step_pin": "zboard:PF6",
      "homing_speed": 5.0,
      "microsteps": 8,
      "position_min": -10.0,
      "dir_pin": "!zboard:PF7",
      "position_max": 1500.0,
      "homing_retract_speed": 5.0,
      "enable_pin": "!zboard:PF2"
    },
    "stepper_y": {
      "homing_positive_dir": false,
      "homing_retract_dist": 5.0,
      "position_endstop": -26.0,
      "full_steps_per_rotation": 200,
      "endstop_pin": "^!PJ0",
      "rotation_distance": 31.74,
      "gear_ratio": [],
      "second_homing_speed": 35.0,
      "step_pin": "PF6",
      "homing_speed": 70.0,
      "microsteps": 16,
      "position_min": -26.0,
      "dir_pin": "!PF7",
      "position_max": 1100.0,
      "homing_retract_speed": 70.0,
      "enable_pin": "!PF2"
    },
    "stepper_x": {
      "homing_positive_dir": true,
      "homing_retract_dist": 5.0,
      "position_endstop": 950.0,
      "full_steps_per_rotation": 200,
      "endstop_pin": "!PD3",
      "rotation_distance": 40.0,
      "gear_ratio": [],
      "second_homing_speed": 35.0,
      "step_pin": "PF0",
      "position_min": 0.0,
      "microsteps": 16,
      "homing_speed": 70.0,
      "position_max": 950.0,
      "dir_pin": "PF1",
      "homing_retract_speed": 70.0,
      "enable_pin": "!PD7"
    },
    "gcode_macro bed_mesh_calibrate": {
      "description": "G-Code macro",
      "rename_existing": "_BED_MESH_CALIBRATE",
      "variable_last_area_end_x": "-1",
      "variable_last_area_end_y": "-1",
      "gcode": "\n{% if params.FORCE_NEW_MESH != null %}\n{ action_respond_info(\"Force New Mesh: %s\" % (params.FORCE_NEW_MESH)) }\n{% endif %}\n{% if printer[\"bed_mesh\"].profile_name == '' %}\n{ action_respond_info(\"No existing bed mesh found.\") }\n{% set last_area_end_x=-1 %}\n{% endif %}\n{% if printer.toolhead.homed_axes != \"xyz\" %}\nG28\n{% endif %}\n{% set klicky_available = printer['gcode_macro _Probe_Variables'] != null %}\n{% set euclid_available = printer['gcode_macro EuclidProbe'] != null %}; Requires v5 macros https://github.com/nionio6915/Euclid_Probe/blob/main/Firmware_Examples/Klipper/00-euclid_exampleV5.cfg\n{% if params.PRINT_MIN %}\n{ action_respond_info(\"print_min: %s\" % params.PRINT_MIN) }\n{ action_respond_info(\"print_max: %s\" % params.PRINT_MAX) }\n{% set blTouchConfig = printer['configfile'].config[\"bltouch\"] %}\n{% if blTouchConfig %}\n{% set OffsetX = blTouchConfig.x_offset|default(0)|float %}\n{% set OffsetY = blTouchConfig.y_offset|default(0)|float %}\n{% endif %}\n{% set probeConfig = printer['configfile'].config[\"probe\"] %}\n{% if probeConfig %}\n{% set OffsetX = probeConfig.x_offset|default(0)|float %}\n{% set OffsetY = probeConfig.y_offset|default(0)|float %}\n{% endif %}\n{% set print_min_x = params.PRINT_MIN.split(\",\")[0]|float %}\n{% set print_min_y = params.PRINT_MIN.split(\",\")[1]|float %}\n{% set print_max_x = params.PRINT_MAX.split(\",\")[0]|float %}\n{% set print_max_y = params.PRINT_MAX.split(\",\")[1]|float %}\n{% if last_area_start_x > 0 %}\n{ action_respond_info(\"last_bed_mesh: %s,%s %s,%s\" % (last_area_start_x, last_area_start_y, last_area_end_x, last_area_end_y)) }\n{% endif %}\n{% if (params.FORCE_NEW_MESH != null) or (print_min_x < last_area_start_x) or (print_max_x > last_area_end_x) or (print_min_y < last_area_start_y) or (print_max_y > last_area_end_y)  %}\n{% if klicky_available %}\n_CheckProbe action=query\nAttach_Probe\n{% elif euclid_available %}\nDEPLOY_PROBE\n{% endif %}\n{% if (print_min_x < print_max_x) and (print_min_y < print_max_y) %}\n{% set bedMeshConfig = printer['configfile'].config[\"bed_mesh\"] %}\n{% set minimum_probe_count = 3 %}\n{% if bedMeshConfig.algorithm == \"bicubic\" %}\n{% set minimum_probe_count = 5 %}\n{% endif %}\n{% set probe_count = bedMeshConfig.probe_count.split(\",\") %}\n{% set probe_count_x = probe_count[0]|int %}\n{% if probe_count.__len__() > 1 %}\n{% set probe_count_y = probe_count[1]|int %}\n{% else %}\n{% set probe_count_y = probe_count_x|int %}\n{% endif %}\n{% set relative_reference_index = bedMeshConfig.relative_reference_index %}\n{% set mesh_min_x = bedMeshConfig.mesh_min.split(\",\")[0]|float %}\n{% set mesh_min_y = bedMeshConfig.mesh_min.split(\",\")[1]|float %}\n{% set mesh_max_x = bedMeshConfig.mesh_max.split(\",\")[0]|float %}\n{% set mesh_max_y = bedMeshConfig.mesh_max.split(\",\")[1]|float %}\n{% if print_max_x - print_min_x < (mesh_max_x - mesh_min_x) * 0.50 %}\n{% set probe_count_x = minimum_probe_count %}\n{% endif %}\n{% if print_max_y - print_min_y < (mesh_max_y - mesh_min_y) * 0.50 %}\n{% set probe_count_y = minimum_probe_count %}\n{% endif %}\n{% if print_min_x - buffer >= mesh_min_x %}\n{% set mesh_min_x = print_min_x - buffer %}\n{% endif %}\n{% if print_min_y - buffer >= mesh_min_y %}\n{% set mesh_min_y = print_min_y - buffer %}\n{% endif %}\n{% if print_max_x + buffer <= mesh_max_x %}\n{% set mesh_max_x = print_max_x + buffer %}\n{% endif %}\n{% if print_max_y + buffer <= mesh_max_y %}\n{% set mesh_max_y = print_max_y + buffer %}\n{% endif %}\n{ action_respond_info(\"mesh_min: %s,%s\" % (mesh_min_x, mesh_min_y)) }\n{ action_respond_info(\"mesh_max: %s,%s\" % (mesh_max_x, mesh_max_y)) }\n{ action_respond_info(\"probe_count: %s,%s\" % (probe_count_x,probe_count_y)) }\n; Set variables so they're available outside of macro\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=last_area_start_x VALUE={print_min_x}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=last_area_start_y VALUE={print_min_y}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=last_area_end_x VALUE={print_max_x}\nSET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=last_area_end_y VALUE={print_max_y}\n{% if printer[\"gcode_macro status_meshing\"] != null %}\nstatus_meshing\n{% endif %}\n{% if relative_reference_index == 0 or relative_reference_index == null %}\n_BED_MESH_CALIBRATE mesh_min={mesh_min_x},{mesh_min_y} mesh_max={mesh_max_x},{mesh_max_y} probe_count={probe_count_x},{probe_count_y}\n{% else %}\n{% set relative_reference_index = ((probe_count_x * probe_count_y - 1) / 2)|int %}\n{ action_respond_info(\"relative_reference_index: %s\" % relative_reference_index) }\n_BED_MESH_CALIBRATE mesh_min={mesh_min_x},{mesh_min_y} mesh_max={mesh_max_x},{mesh_max_y} probe_count={probe_count_x},{probe_count_y} relative_reference_index={relative_reference_index}\n{% endif %}\n{% else %}\n{% if printer[\"gcode_macro status_meshing\"] != null %}\nstatus_meshing\n{% endif %}\n_BED_MESH_CALIBRATE\n{% endif %}\n{% if klicky_available %}\nDock_Probe\n{% elif euclid_available %}\nSTOW_PROBE\n{% endif %}\n{% else %}\n{ action_respond_info(\"No need to recreate Bed Mesh since it's same as current mesh or smaller\") }\n{% endif %}\n{% else %}\n{% if klicky_available %}\n_CheckProbe action=query\nAttach_Probe\n{% elif euclid_available %}\nSTOW_PROBE\n{% endif %}\n{% if printer[\"gcode_macro status_meshing\"] != null %}\nstatus_meshing\n{% endif %}\n_BED_MESH_CALIBRATE\n{% if klicky_available %}\nDock_Probe\n{% endif %}\n{% if euclid_available %}\nSTOW_PROBE\n{% endif %}\n{% endif %}\n{% if printer[\"gcode_macro status_ready\"] != null %}\nstatus_ready\n{% endif %}",
      "variable_last_area_start_y": "-1",
      "variable_last_area_start_x": "-1",
      "variable_buffer": "20"
    },
    "printer": {
      "square_corner_velocity": 5.0,
      "move_flush_time": 0.05,
      "max_accel": 2000.0,
      "buffer_time_start": 0.25,
      "buffer_time_low": 1.0,
      "max_z_accel": 20.0,
      "max_velocity": 300.0,
      "max_z_velocity": 11.0,
      "kinematics": "cartesian",
      "max_accel_to_decel": 1000.0,
      "buffer_time_high": 2.0
    },
    "gcode_macro ecken_leveln_manuell": {
      "gcode": "\nG28\nBED_SCREWS_ADJUST",
      "description": "G-Code macro"
    },
    "gcode_macro g29": {
      "gcode": "\nG28\nBED_MESH_CLEAR\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=default",
      "description": "G-Code macro"
    },
    "gcode_macro resume": {
      "rename_existing": "BASE_RESUME",
      "description": "G-Code macro",
      "gcode": "\n{% set E = printer[\"gcode_macro PAUSE\"].extrude|float %}\nG91\nG1 E{E} F2100\nM220 S5\nRESTORE_GCODE_STATE NAME=PAUSE_state\nBASE_RESUME"
    },
    "mcu zboard": {
      "baud": 250000,
      "max_stepper_error": 2.5e-05,
      "serial": "/dev/serial/by-path/platform-3f980000.usb-usb-0:1.3:1.0-port0"
    },
    "idle_timeout": {
      "gcode": "PRINT_TIMEOUT timeout: 3000",
      "timeout": 600.0
    },
    "fan": {
      "cycle_time": 0.01,
      "pin": "PH4",
      "off_below": 0.0,
      "shutdown_speed": 0.0,
      "max_power": 1.0,
      "kick_start_time": 0.8,
      "hardware_pwm": false
    },
    "heater_fan my_nozzle_fan": {
      "heater": [
        "extruder"
      ],
      "cycle_time": 0.01,
      "pin": "PB4",
      "off_below": 0.0,
      "heater_temp": 50.0,
      "shutdown_speed": 1.0,
      "fan_speed": 1.0,
      "max_power": 1.0,
      "kick_start_time": 0.1,
      "hardware_pwm": false
    },
    "stepper_z2": {
      "full_steps_per_rotation": 200,
      "rotation_distance": 1.00512,
      "gear_ratio": [],
      "step_pin": "zboard:PA4",
      "microsteps": 8,
      "dir_pin": "!zboard:PA6",
      "enable_pin": "!zboard:PA2"
    },
    "stepper_z3": {
      "full_steps_per_rotation": 200,
      "rotation_distance": 1.00512,
      "gear_ratio": [],
      "step_pin": "zboard:PC1",
      "microsteps": 8,
      "dir_pin": "!zboard:PC3",
      "enable_pin": "!zboard:PC7"
    },
    "mcu": {
      "baud": 250000,
      "serial": "/dev/serial/by-path/platform-3f980000.usb-usb-0:1.5:1.0-port0",
      "max_stepper_error": 2.5e-05
    },
    "stepper_z1": {
      "full_steps_per_rotation": 200,
      "rotation_distance": 1.00512,
      "gear_ratio": [],
      "step_pin": "zboard:PL3",
      "microsteps": 8,
      "dir_pin": "!zboard:PL1",
      "enable_pin": "!zboard:PK0"
    },
    "gcode_macro load_filament": {
      "gcode": "\nG28\nG1 Z150 F6000\nM83\nG1 E60 F300\nG1 E70 F1800\nG1 E25 F150\nM82",
      "description": "G-Code macro"
    },
    "quad_gantry_level": {
      "retries": 18,
      "horizontal_move_z": 10.0,
      "retry_tolerance": 0.03,
      "gantry_corners": [
        [
          -165.0,
          -200.0
        ],
        [
          1110.0,
          1100.0
        ]
      ],
      "points": [
        [
          100.0,
          100.0
        ],
        [
          100.0,
          900.0
        ],
        [
          890.0,
          900.0
        ],
        [
          890.0,
          100.0
        ]
      ],
      "speed": 300.0,
      "max_adjust": 70.0
    },
    "bed_mesh": {
      "horizontal_move_z": 6.0,
      "mesh_pps": [
        4,
        4
      ],
      "algorithm": "bicubic",
      "mesh_max": [
        800.0,
        900.0
      ],
      "fade_start": 10.0,
      "bicubic_tension": 0.08,
      "fade_end": 2.0,
      "mesh_min": [
        130.0,
        60.0
      ],
      "split_delta_z": 0.025,
      "probe_count": [
        6,
        10
      ],
      "speed": 250.0,
      "move_check_distance": 5.0
    },
    "gcode_macro bltouch_calibrate": {
      "gcode": "\nG28\nG1 F4000 z10 X111 Y195\nPROBE_ACCURACY",
      "description": "G-Code macro"
    },
    "gcode_macro pause": {
      "gcode": "\n{% set E = printer[\"gcode_macro PAUSE\"].extrude|float %}\n{% set X = params.X|default(0)|float %}\n{% set Y = params.Y|default(0)|float %}\n{% set max_z = printer.toolhead.axis_maximum.z|float %}\n{% set act_z = printer.toolhead.position.z|float %}\n{% if act_z < (max_z - 200.0) %}\n{% set z_safe = 200.0 %}\n{% else %}\n{% set z_safe = max_z - act_z - 10 %}\n{% endif %}\nSAVE_GCODE_STATE NAME=PAUSE_state\nBASE_PAUSE\nG91\nG1 E-{E} F2100\nG1 Z{z_safe} F750\nG90\nG1 X{X} Y{Y} F6000",
      "description": "G-Code macro",
      "variable_extrude": "1.0",
      "rename_existing": "BASE_PAUSE"
    },
    "gcode_macro unload_filament": {
      "gcode": "\nG28\nG1 Z150 F6000\nM83\nG1 E10 F300\nG1 E-130 F1800\nM82",
      "description": "G-Code macro"
    },
    "gcode_macro start_print": {
      "gcode": "\nG28\nBED_MESH_CALIBRATE PRINT_MIN={params.PRINT_MIN} PRINT_MAX={params.PRINT_MAX}\n{% set EXTRUDER = params.EXTRUDER_TEMP|default(220)|int %}\nM109 S{EXTRUDER}\nG90\nM83\nM220 S100\nM221 S100\nG1 Z5 F600\nG92 E0\nG1 X900 Y20 F6000\nG1 X900 Y50 F5000\nG1 Z0.5 F600\nG1 Y95 F300 E12\nG1 F300 E10\nG1 Z0.2 F600\nG1 Y200 E30 F600\nG1 Y230 Z5 F600",
      "description": "G-Code macro"
    },
    "gcode_macro ecken_leveln_probe": {
      "gcode": "\nG28\nSCREWS_TILT_CALCULATE",
      "description": "G-Code macro"
    },
    "bltouch": {
      "samples_tolerance_retries": 0,
      "probe_with_touch_mode": true,
      "x_offset": -41.0,
      "lift_speed": 3.0,
      "sample_retract_dist": 2.0,
      "control_pin": "zboard:PB5",
      "samples_result": "average",
      "pin_move_time": 0.68,
      "samples_tolerance": 0.1,
      "y_offset": 42.0,
      "samples": 1,
      "pin_up_reports_not_triggered": true,
      "z_offset": 4.253,
      "sensor_pin": "^zboard:PD3",
      "pin_up_touch_mode_reports_triggered": true,
      "stow_on_each_sample": true,
      "speed": 3.0
    },
    "extruder": {
      "control": "pid",
      "pullup_resistor": 4700.0,
      "max_extrude_cross_section": 800.0,
      "gear_ratio": [
        [
          3.0,
          1.0
        ]
      ],
      "max_extrude_only_distance": 500.0,
      "sensor_type": "PT1000",
      "min_temp": 5.0,
      "enable_pin": "!zboard:PD7",
      "pressure_advance": 0.0375,
      "max_extrude_only_velocity": 498.90202569214546,
      "pwm_cycle_time": 0.1,
      "dir_pin": "!zboard:PF1",
      "pid_kp": 56.334,
      "instantaneous_corner_velocity": 1.0,
      "full_steps_per_rotation": 200,
      "heater_pin": "PH5",
      "pressure_advance_smooth_time": 0.04,
      "smooth_time": 7.0,
      "pid_ki": 12.95,
      "filament_diameter": 1.75,
      "sensor_pin": "zboard:PK6",
      "nozzle_diameter": 1.0,
      "pid_kd": 61.264,
      "rotation_distance": 22.6694,
      "step_pin": "zboard:PF0",
      "max_power": 1.0,
      "microsteps": 16,
      "min_extrude_temp": 180.0,
      "max_extrude_only_accel": 3326.0135046143027,
      "max_temp": 330.0
    }
  },
  "save_config_pending": false
}